DROP DATABASE IF EXISTS artisan_market_place;
CREATE DATABASE artisan_market_place;

DROP TABLE IF EXISTS user_details;
CREATE TABLE user_details (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(32) NOT NULL,
    middle_name VARCHAR(32),
    last_name VARCHAR(32) NOT NULL,
    email VARCHAR(128) NOT NULL UNIQUE,
    phone_number VARCHAR(16) NOT NULL UNIQUE,
    company_name VARCHAR(128),
    gst_number VARCHAR(32),
    status VARCHAR(16) NOT NULL,
    rating INT NULL,
    is_admin BOOLEAN,
    country_code VARCHAR(8),
    role VARCHAR(32),
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128) );

DROP TABLE IF EXISTS user_login_info;
CREATE TABLE user_login_info (
    login_info_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    login_id VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS bank_account;
CREATE TABLE bank_account (
    bank_account_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    account_holder_name VARCHAR(128) NOT NULL,
    account_number VARCHAR(32) NOT NULL UNIQUE,
    ifsc_code VARCHAR(16) NOT NULL,
    bank_name VARCHAR(64) NOT NULL,
    branch_name VARCHAR(100) NOT NULL,
    account_type VARCHAR(20) NOT NULL, -- Example: 'SAVINGS', 'CURRENT'
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS credit_card;
CREATE TABLE credit_card (
    card_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    card_holder_name VARCHAR(128) NOT NULL,
    card_number VARCHAR(16) NOT NULL UNIQUE,
    expiry_date DATE NOT NULL,
    cvv VARCHAR(3) NOT NULL,
    card_type VARCHAR(32) NOT NULL, -- Example: 'VISA', 'MASTERCARD', 'RUPAY'
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_credit_card_user FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS admin_address;
CREATE TABLE admin_address (
    address_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT,
    address1 VARCHAR(256) NOT NULL,
    address2 VARCHAR(256),
    raw_address VARCHAR(256),
    city VARCHAR(64) NOT NULL,
    state VARCHAR(64) NOT NULL,
    country VARCHAR(32) NOT NULL,
    zip_code VARCHAR(32) NOT NULL,
    latitude DOUBLE,
    longitude DOUBLE,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_address__user_id FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS products;
CREATE TABLE products (
    product_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id BIGINT,
    name VARCHAR(255) NOT NULL UNIQUE,
    description VARCHAR(1000),
    price DECIMAL(10,2) NOT NULL,
    total_quantity INT NOT NULL,
    stock_quantity INT NOT NULL,
    category VARCHAR(100) NOT NULL,
    brand VARCHAR(100) NOT NULL,
    discount_price DECIMAL(10,2) NOT NULL,
    weight DECIMAL(5,2),
    dimensions VARCHAR(50),
    rating DECIMAL(2,1) NOT NULL,
    reviews_count INT NOT NULL,
    status VARCHAR(50) NOT NULL,
    tax_category VARCHAR(50) NOT NULL,
    product_type VARCHAR(50) NOT NULL,
    color VARCHAR(32),
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_product_user_id FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS product_reviews;
CREATE TABLE product_reviews (
    review_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT NOT NULL,
    reviews TEXT NOT NULL,
    reviews_count INT NOT NULL,
    ratings DECIMAL(2,1) NOT NULL,
    ratings_count INT NOT NULL,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_product_reviews_product FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS product_images;
CREATE TABLE product_images (
    image_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT NOT NULL,
    image_url VARCHAR(500) NOT NULL,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_product_images_product FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS product_offers;
CREATE TABLE product_offers (
    offer_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT NULL,
    customer_type VARCHAR(255) NULL,
    offer_name VARCHAR(255) NOT NULL,
    offer_description TEXT NOT NULL,
    percentage_discount DOUBLE NULL,
    flat_discount DECIMAL(2,1) NULL,
    max_discount_amount DECIMAL(2,1) NULL,
    min_purchase_amount DECIMAL(2,1) NULL,
    start_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    offer_status VARCHAR(50) NOT NULL,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_product_offers_product FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE);

DROP TABLE IF EXISTS notification_details;
CREATE TABLE notification_details (
    notification_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    subject VARCHAR(255) NOT NULL,
    is_email BOOLEAN NOT NULL,
    is_sms BOOLEAN NOT NULL,
    content TEXT NOT NULL,
    status VARCHAR(32) NOT NULL,
    creation_date DATETIME NOT NULL,
    created_by VARCHAR(128),
    last_update_date DATETIME NOT NULL,
    last_updated_by VARCHAR(128),
    CONSTRAINT fk_user_notification FOREIGN KEY (user_id) REFERENCES user_details(user_id) ON DELETE CASCADE);

ALTER TABLE user_login_info ADD COLUMN last_otp VARCHAR(4);